CREATE TABLE IF NOT EXISTS users
(
    user_id   bigint       NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    email     varchar(254) NOT NULL,
    user_name varchar(250) NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (user_id),
    CONSTRAINT unique_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
    category_id   bigint       NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    category_name varchar(200) NOT NULL,
    CONSTRAINT categories_pkey PRIMARY KEY (category_id),
    CONSTRAINT unique_category_name UNIQUE (category_name)
);

CREATE TABLE IF NOT EXISTS locations
(
    location_id bigint           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    latitude    double precision not null,
    longitude   double precision not null,
    CONSTRAINT locations_pkey PRIMARY KEY (location_id),
    CONSTRAINT uniqueness_location UNIQUE (latitude, longitude)
);

CREATE TABLE IF NOT EXISTS events
(
    event_id            bigint        NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    event_title         varchar(120)  NOT NULL,
    annotation          varchar(2000) NOT NULL,
    category_id         bigint        NOT NULL,
    created_on          timestamp     NOT NULL,
    description         varchar(7000) NOT NULL,
    event_date          timestamp     NOT NULL,
    location_id         bigint        NOT NULL,
    user_id             bigint        NOT NULL,
    paid                boolean       not null,
    participation_limit int     DEFAULT 0,
    published_on        timestamp,
    request_moderation  boolean DEFAULT false,
    state               varchar(12)   NOT NULL,

    CONSTRAINT events_pkey PRIMARY KEY (event_id),
    CONSTRAINT correct_event_date
        CHECK (event_date > NOW() + interval '2' HOUR),
    CONSTRAINT fk_event_category
        FOREIGN KEY (category_id)
            REFERENCES categories (category_id) ON DELETE RESTRICT,
    CONSTRAINT fk_event_location
        FOREIGN KEY (location_id)
            REFERENCES locations (location_id) ON DELETE RESTRICT,
    CONSTRAINT fk_event_initiator
        FOREIGN KEY (user_id)
            REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests
(
    request_id bigint      NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created    timestamp   NOT NULL,
    event_id   bigint      NOT NULL,
    user_id    bigint      NOT NULL,
    status     varchar(12) NOT NULL,
    CONSTRAINT requests_pkey PRIMARY KEY (request_id),
    CONSTRAINT fk_request_event
        FOREIGN KEY (event_id)
            REFERENCES events (event_id) ON DELETE CASCADE,
    CONSTRAINT fk_request_requester
        FOREIGN KEY (user_id)
            REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT unique_requests UNIQUE (user_id, event_id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    compilation_id bigint      NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    pinned         boolean DEFAULT FALSE,
    title          varchar(50) NOT NULL,
    CONSTRAINT compilations_pkey PRIMARY KEY (compilation_id)
);

CREATE TABLE IF NOT EXISTS compilations_events
(
    compilations_events_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    event_id               bigint NOT NULL,
    compilation_id         bigint NOT NULL,
    CONSTRAINT compilations_events_pkey PRIMARY KEY (compilations_events_id),
    CONSTRAINT fk_request_event
        FOREIGN KEY (event_id)
            REFERENCES events (event_id) ON DELETE CASCADE,
    CONSTRAINT fk_request_requester
        FOREIGN KEY (compilation_id)
            REFERENCES compilations (compilation_id) ON DELETE CASCADE
);